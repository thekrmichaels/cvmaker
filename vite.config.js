import { defineConfig } from "vite";
import react from "@vitejs/plugin-react-swc";
import { createHtmlPlugin } from "vite-plugin-html";
import fs from "fs";
import path from "path";

const BASE_PATH = "/cvmaker";

// https://vite.dev/config/
export default defineConfig({
  plugins: [
    react(),
    createHtmlPlugin({
      inject: {
        data: {
          version: Date.now(),
        },
      },
    }),
    injectPreloadCssPlugin(),
  ],
  base: BASE_PATH,
});

function injectPreloadCssPlugin() {
  return {
    name: "inject-preload-css",
    apply: "build",

    closeBundle() {
      const distPath = path.resolve("dist/index.html");
      const assetsPath = path.resolve("dist/assets");

      if (!fs.existsSync(distPath) || !fs.existsSync(assetsPath)) return;

      const html = fs.readFileSync(distPath, "utf8");
      const cssFile = findCssFile(assetsPath);

      if (cssFile) {
        const updatedHtml = injectPreload(html, cssFile);

        fs.writeFileSync(distPath, updatedHtml, "utf8");
      }
    },
  };
}

function findCssFile(directory) {
  return fs
    .readdirSync(directory)
    .find((file) => file.startsWith("index-") && file.endsWith(".css"));
}

function injectPreload(html, cssFile) {
  const cssPath = `${BASE_PATH}/assets/${cssFile}`;
  const preloadTag = `<link rel="preload" href="${cssPath}" as="style" onload="this.onload=null;this.rel='stylesheet'">`;

  // * Remove the original <link rel="stylesheet"> generated by Vite
  html = html.replace(/<link rel="stylesheet".*?>/g, "");

  // * Insert the preload after the second <link>
  return html.replace(
    /(<link.*?>){2}/,
    (match) => `${match}\n    ${preloadTag}`,
  );
}
